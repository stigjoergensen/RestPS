<#
.Description
Build the PSM1 script (the module file that an/should be installed in to the ENV:PSModulePath)
Written by Stig.joergensen, inspired by module.build.ps1 script

#>


[cmdletbinding()]
param(
    [string]$CodeBase = "RestPS\",
    [string]$OutputFilename = "RestPS.PSM1",
    [int32]$DebugPort = 8080,
    [bool]$VerifyClientIP = $true,
    [string]$EndPoints = "EndPoints"
)
Write-Verbose "This psm1 is replaced in the build output. This file is only used for debugging."
Write-Verbose $PSScriptRoot

$PSM1File = ""
$DebugFile = "<#`r`n`r`n" +
" File have been auto generated by $($MyInvocation.MyCommand.Name)`r`n" +
" Generated $(get-date -Format "dddd yyyy.MM.dd HH:mm")`r`n" +
" Must be executed from ""$CodeBase""`r`n" +
"#>`r`n" +
"`r`n" +
"`$RestPSHome=""$([IO.Path]::Combine($PSScriptRoot,$codeBase))""`r`n" +
"Push-Location `$RestPSHome`r`n" +
"`r`n" 

$Exports = "<#`r`n`r`n File have been auto generated by $($MyInvocation.MyCommand.Name)`r`n Generated $(get-date -Format "dddd yyyy.MM.dd HH:mm")`r`n`r`n #>`r`n`r`n"
$FolderList = @('classes', 'private', 'public', 'includes', 'internal')

Write-Verbose 'Import everything in sub folders'
foreach ($folder in $FolderList)
{
    $root = [IO.Path]::Combine($PSScriptRoot, $CodeBase, $Folder)

    Write-Verbose "processing folder $root"
    if (Test-Path -Path $root)
    {
        $files = Get-ChildItem -Path $root -Filter *.ps1 -Recurse

        # dot source each file
        $files | where-Object { $_.name -NotLike '*.Tests.ps1' } |
        ForEach-Object {
            $DebugFile += ". '.\$([IO.Path]::Combine($Folder,$_.Name))'`r`n"
            $PSM1File += "`n`n## $([IO.Path]::Combine($Folder,$_.Name))`n"
            $PSM1File += get-content "$($_.FullName)" -raw

            if ($folder -eq "public")
            {
                $Exports += "Export-ModuleMember -Function $($_.BaseName)`n"
            }
        }
    }
}

$DebugFile += "`r`n"
$DebugFile += "Start-RestPSListener -Port $DebugPort -VerifyClientIP `$$VerifyClientIP -RoutesFilePath ([IO.Path]::Combine(""`$RestPSHome"",""$EndPoints"",""RestPSRoutes.json"")) -RestPSLocalRoot ""`$RestPSHome""`r`n"
$DebugFile += "Pop-Location`r`n"
$PSM1File += "`n`n## Exports:`n$Exports"
set-content -path ".\$CodeBase\$([System.IO.Path]::GetFileNameWithoutExtension($OutputFilename))Module.psm1" -value $PSM1File
Set-Content -Path ".\$CodeBase\$([System.IO.Path]::GetFileNameWithoutExtension($OutputFilename))Debug.ps1" -value $DebugFile

write-host "Module and debug file have been created"
Write-Host "  Copy ""$([System.IO.Path]::GetFileNameWithoutExtension($OutputFilename))Module.psm1"" as ""$($OutputFilename)"" to one of:`r`n    $(($ENV:PSModulePath -split ";") -join "\RestPS\*`r`n    ")\RestPS\*"
write-host "  *RestPS folder needs to be created in the choosen installation location"

